#Aula 01 - tokenizacao de texto

#Introducao a tokenizacao de texto
texto <- c("Because I could stop for Death -",
           "He kindly stopped for me -",
           "The Carriage held just for Ourselves -",
           "and Immortality")
View(texto)

text_df <- data_frame(line = 1:4,
                      text = texto)
View(text_df)

library(tidytext)

unnest_tokens(text_df, input="text", output="word") -> text_token

library(janeaustenr)

View(austen_books())

#1o Contagem de palavras em Jane Austen

#Agrupamos os textos de Jane Austen por livro
group_by(austen_books(), book) -> austen_grouped

#Inserindo os numeros de linha
mutate(austen_grouped, linenumber = row_number()) -> austen_linenumber

View(austen_linenumber)

#Inserindo o numero de capitulo
str_detect("Este e um exemplo de chapter i", regex("^chapter [ivxlc]"))
str_detect("chapter i, este e um exemplo", regex("^chapter [ivxlc]"))
str_detect("chapter 1", regex("^chapter [\\d]"))

mutate(austen_linenumber, chapter = cumsum(
  str_detect(text, regex("^chapter [\\divxlc]", ignore_case=TRUE) ) ) ) -> austen_chapters

View(austen_chapters)

ungroup(austen_chapters) -> austen_chapters_ungrouped

unnest_tokens(austen_chapters_ungrouped,
              token = "words",
              input = text,
              to_lower=TRUE,
              output = word,
              drop = TRUE) -> austen_token

View(austen_token)

mutate(austen_token, word = str_extract(word,"[a-z']+")) -> austen_token

View(stop_words)

anti_join(austen_token, stop_words,
          by=c("word"="word")) -> austen_words

View(austen_words)

#Contagem de Palavras
count(austen_words, word, sort=TRUE) -> austen_count

View(austen_count)

filter(austen_count, n>600) -> austen_600

View(austen_600)

#Grafico com ggplot2
ggplot(austen_600, aes(x=n, y=word)) + geom_col() + xlab(NULL)

ggplot(austen_600, aes(x=word, y=n)) + geom_col() + xlab(NULL)

mutate(austen_600, word = reorder(word,n)) -> austen_reorder

ggplot(austen_reorder, aes(x=word, y=n)) + geom_col() + xlab(NULL)

ggplot(austen_reorder, aes(x=word, y=n)) + 
  geom_col() + xlab(NULL) + coord_flip() 

#Analise de correlacao entre palavras
library(gutenbergr)

hgwells <- gutenberg_download(c(35, 36, 5230,159))
bronte <- gutenberg_download(c(1260, 768, 969, 9182, 767))

hgwells %>% unnest_tokens(input=text,
                          output="word",
                          to_lower=TRUE,
                          drop=TRUE) %>%
  mutate(word=str_extract(word,"[a-z']+")) %>%
  anti_join(stop_words, by=c("word"="word")) %>%
  count(word, sort=TRUE) -> hgwells_count

View(hgwells_count)

bronte %>% unnest_tokens(input=text,
                          output="word",
                          to_lower=TRUE,
                          drop=TRUE) %>%
  mutate(word=str_extract(word,"[a-z']+")) %>%
  anti_join(stop_words, by=c("word"="word")) %>%
  count(word, sort=TRUE) -> bronte_count

View(bronte_count)

mutate(austen_count, author="Jane Austen") -> austen_count
mutate(bronte_count, author="Bronte Sisters") -> bronte_count
mutate(hgwells_count, author="H.G.Wells") -> hgwells_count

bind_rows(austen_count, bronte_count, hgwells_count)->autores_count
View(autores_count)

group_by(autores_count, author) -> autores_grouped
autores_grouped

mutate(autores_grouped, proportion=n/sum(n)) -> autores_proportion
View(autores_proportion)

#Eliminando a coluna n
select(autores_proportion, -n) -> autores_proportion2
View(autores_proportion2)

spread(autores_proportion2, author, proportion) -> autores_spread
View(autores_spread)

gather(autores_spread, Outros, 
       proportion,"Bronte Sisters":"H.G.Wells") -> autores_gather
View(autores_gather)

#Gerando o gráfico de correlacao entre palavras
ggplot(filter(autores_gather, Outros=="Bronte Sisters"),
       aes(x=proportion, y=`Jane Austen`)) + geom_point()

ggplot(filter(autores_gather, Outros=="H.G.Wells"),
       aes(x=proportion, y=`Jane Austen`)) + geom_point()

#Combinando os gráficos em uma unica visualizacao
ggplot(autores_gather, 
       aes(x=proportion, y=`Jane Austen`)) + geom_point() +
  facet_wrap(~ Outros)

ggplot(autores_gather, 
       aes(x=proportion, y=`Jane Austen`)) + geom_point() +
  facet_wrap(~ Outros) + 
  scale_x_log10(labels=percent_format()) +
  scale_y_log10(labels=percent_format())

ggplot(autores_gather, 
       aes(x=proportion, y=`Jane Austen`)) + geom_point() +
  facet_wrap(~ Outros) + 
  geom_abline(color="gray40", lty=2) +
  scale_x_log10(labels=percent_format()) +
  scale_y_log10(labels=percent_format())

ggplot(autores_gather, 
       aes(x=proportion, y=`Jane Austen`)) + geom_point() +
  facet_wrap(~ Outros) + 
  geom_abline(color="gray40", lty=2) +
  scale_x_log10(labels=percent_format()) +
  scale_y_log10(labels=percent_format()) +
  labs(y="Jane Austen", x=NULL)

ggplot(autores_gather, 
       aes(x=proportion, y=`Jane Austen`,
           color = abs(`Jane Austen`-proportion))) + 
  geom_text(aes(label=word), check_overlap = TRUE, vjust = 1.5) +
  geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +  
  geom_abline(color = "gray40", lty=2) +
  scale_x_log10(labels = percent_format()) +
  scale_y_log10(labels = percent_format()) +
  scale_color_gradient(limits = c(0, 0.001),
                       low = "darkslategray4", high = "gray75") +  
  facet_wrap(~ Outros, ncol = 2) +
  labs(y = "Jane Austen", x = NULL) +
  theme(legend.position="none")

#Finalizando: exportando o dataframe authores_gather para um .csv
write.csv2(autores_gather,"../dados/silge/autores_gather.csv")
