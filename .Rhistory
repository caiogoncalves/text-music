# install.packages("devtools")
devtools::install_github("brunaw/vagalumeR")
# install.packages("devtools")
devtools::install_github("brunaw/vagalumeR")
library(vagalumeR)
key <- "c6d168d4efa0208423e0d46b6323a1fb"
artists <- c("the-beatles", "madonna", "chico-buarque",
"the-rolling-stones", "molejo")
library(tidyverse)
library(plyr)
ldply(map(artists, artistInfo), data.frame)
disc <- ldply(map(artists, discography), data.frame)
rel <- ldply(map(artists, relatedInfo), data.frame)
disc <- ldply(map(artists, discography), data.frame)
library(network)
df <- data.frame(rel$name, rel$related)
net <- network(df)
plot(net, label = network.vertex.names(net))
songs <- ldply(map(artists, songNames), data.frame)
lyr <- ldply(map(songs$song.id[1:5], lyrics, type = "id", key = key),
data.frame)
stop_words <-  stopwords::stopwords(language = "pt", source = "stopwords-iso")
stop_words_en <-  stopwords::stopwords(language = "en", source = "stopwords-iso")
text_token <- tidytext::unnest_tokens(playlist_lyrics, input="lyric", output="word")
for (i in 1:nrow(playlist_tracks_filtred)) {
artist <- playlist_tracks_filtred$artist_name[i]
track <- playlist_tracks_filtred$track_name[i]
lyrics <- possible_lyrics(abjutils::rm_accent(artist), abjutils::rm_accent(track))
if(nrow(lyrics) > 0){ playlist_lyrics <- bind_rows(playlist_lyrics,lyrics)}
}
source('~/projetos/text_musicas/trab.R', echo=TRUE)
user_caio <- "caiogoncalves"
###get playlist####
user_mariana <- '12129686008'
user_caio <- "caiogoncalves"
Playlists <- get_user_playlists(user_caio)
playlist_tracks <- get_playlist_tracks(Playlists)
View(Playlists)
playlist_tracks_filtred <- playlist_tracks[playlist_tracks$playlist_name == Playlists$playlist_name[1],]
playlist_lyrics <-data.frame()
for (i in 1:nrow(playlist_tracks_filtred)) {
artist <- playlist_tracks_filtred$artist_name[i]
track <- playlist_tracks_filtred$track_name[i]
lyrics <- possible_lyrics(abjutils::rm_accent(artist), abjutils::rm_accent(track))
if(nrow(lyrics) > 0){ playlist_lyrics <- bind_rows(playlist_lyrics,lyrics)}
}
text_token <- tidytext::unnest_tokens(playlist_lyrics, input="lyric", output="word")
stop_words <-  stopwords::stopwords(language = "pt", source = "stopwords-iso")
stop_words_en <-  stopwords::stopwords(language = "en", source = "stopwords-iso")
text_token <- text_token %>%
count(word, sort = TRUE)
text_token <- text_token %>%
count(word, sort = TRUE)
text_token <- text_token %>%
dplyr::count(word, sort = TRUE)
View(text_token)
text_token <- tidytext::unnest_tokens(playlist_lyrics, input="lyric", output="word")
text_token_cleared <- text_token %>%
dplyr::count(word, sort = TRUE)
text_token_cleared <- text_token_cleared %>%
filter(!word %in% stop_words_en)
install.packages("wordcloud2")
wordcloud2::wordcloud2(hmtTable, size=0.7)
wordcloud2::wordcloud2(text_token_cleared, size=0.7)
wordcloud2::wordcloud2(text_token_cleared, size=0.7)
View(text_token)
View(playlist_lyrics)
Playlists <- get_user_playlists(user_mariana)
playlist_tracks <- get_playlist_tracks(Playlists)
View(Playlists)
Playlists <- get_user_playlists(user_mariana)
playlist_tracks <- get_playlist_tracks(Playlists)
playlist_tracks_filtred <- playlist_tracks[playlist_tracks$playlist_name == Playlists$playlist_name[1],]
playlist_lyrics <-data.frame()
for (i in 1:nrow(playlist_tracks_filtred)) {
artist <- playlist_tracks_filtred$artist_name[i]
track <- playlist_tracks_filtred$track_name[i]
lyrics <- possible_lyrics(abjutils::rm_accent(artist), abjutils::rm_accent(track))
if(nrow(lyrics) > 0){ playlist_lyrics <- bind_rows(playlist_lyrics,lyrics)}
}
text_token <- tidytext::unnest_tokens(playlist_lyrics, input="lyric", output="word")
stop_words <-  stopwords::stopwords(language = "pt", source = "stopwords-iso")
stop_words_en <-  stopwords::stopwords(language = "en", source = "stopwords-iso")
text_token_cleared <- text_token %>%
dplyr::count(word, sort = TRUE)
text_token_cleared <- text_token_cleared %>%
filter(!word %in% stop_words_en)
wordcloud2::wordcloud2(text_token_cleared, size=0.7)
?wordcloud2
wordcloud2::wordcloud2(text_token_cleared[text_token_cleared$n > 100], size=0.7)
wordcloud2::wordcloud2(text_token_cleared[text_token_cleared$n > 100,], size=0.7)
wordcloud2::wordcloud2(text_token_cleared[text_token_cleared$n == 100,], size=0.7)
max(text_token_cleared)
max(text_token_cleared$n)
wordcloud2::wordcloud2(text_token_cleared[text_token_cleared$n > 1,], size=0.7)
wordcloud2::wordcloud2(text_token_cleared[text_token_cleared$n > 10,], size=0.7)
wordcloud2::wordcloud2(text_token_cleared[1:10,], size=0.7)
wordcloud2::wordcloud2(text_token_cleared[1:50,], size=0.7)
text_token_cleared
View(text_token_cleared)
text_token_cleared <- text_token_cleared %>%
filter(!word %in% stop_words)
wordcloud2::wordcloud2(text_token_cleared, size=0.7)
stop_words_en
text_token_cleared <- text_token_cleared %>%
filter(!word %in% stop_words_en)
wordcloud2::wordcloud2(text_token_cleared, size=0.7)
View(text_token_cleared)
View(Playlists)
source('~/projetos/text_musicas/trab.R', echo=TRUE)
View(text_token_cleared)
View(text_token)
View(songs)
View(Playlists)
View(playlist_tracks_filtred)
View(playlist_lyrics)
library(spotifyr)
library(tidyverse)
library(plyr)
library(network)
key <- "c6d168d4efa0208423e0d46b6323a1fb"
httr::set_config(httr::config(http_version = 0))
client_id <- "fb15627b4633438596730c2fe62f8dd4"
secret <- "a62ba09e1734499f81162f39dfbb39c1"
Sys.setenv(SPOTIFY_CLIENT_ID = "fb15627b4633438596730c2fe62f8dd4")
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret)
access_token <- get_spotify_access_token()
###get playlist####
user_mariana <- '12129686008'
user_caio <- "caiogoncalves"
Playlists <- get_user_playlists(user_caio)
playlist_tracks_filtred <- playlist_tracks[playlist_tracks$playlist_name == Playlists$playlist_name[1],]
playlist_tracks <- get_playlist_tracks(Playlists)
playlist_tracks_filtred <- playlist_tracks[playlist_tracks$playlist_name == Playlists$playlist_name[1],]
playlist_lyrics <-data.frame()
for (i in 1:nrow(playlist_tracks_filtred)) {
artist <- playlist_tracks_filtred$artist_name[i]
track <- playlist_tracks_filtred$track_name[i]
lyrics <- possible_lyrics(abjutils::rm_accent(artist), abjutils::rm_accent(track))
if(nrow(lyrics) > 0){ playlist_lyrics <- bind_rows(playlist_lyrics,lyrics)}
}
View(playlist_lyrics)
possible_lyrics(abjutils::rm_accent(artist), abjutils::rm_accent(track))
lyrics$artist <- artist
View(lyrics)
playlist_lyrics <-data.frame()
for (i in 1:nrow(playlist_tracks_filtred)) {
artist <- playlist_tracks_filtred$artist_name[i]
track <- playlist_tracks_filtred$track_name[i]
lyrics <- possible_lyrics(abjutils::rm_accent(artist), abjutils::rm_accent(track))
lyrics$artist <- artist
if(nrow(lyrics) > 0){ playlist_lyrics <- bind_rows(playlist_lyrics,lyrics)}
}
text_token <- tidytext::unnest_tokens(playlist_lyrics, input="lyric", output="word")
View(text_token)
stop_words <-  stopwords::stopwords(language = "pt", source = "stopwords-iso")
stop_words_en <-  stopwords::stopwords(language = "en", source = "stopwords-iso")
text_token_cleared <- text_token %>%
dplyr::count(word, sort = TRUE)
text_token_cleared <- text_token_cleared %>%
filter(!word %in% stop_words_en)
text_token_cleared <- text_token_cleared %>%
filter(!word %in% stop_words)
View(text_token_cleared)
View(text_token)
words_by_artists <- text_token %>%
group_by(artist, word) %>%
summarise(count=n())
words_by_artists <- text_token %>%
group_by(artist, word) %>%
summarise(count=n())
library(spotifyr)
library(tidyverse)
library(plyr)
library(network)
words_by_artists <- text_token %>%
group_by(artist, word) %>%
summarise(count=n())
words_by_artists <- text_token %>%
group_by(artist, word) %>%
summarise(count())
words_by_artists <- text_token %>%
group_by(artist, word) %>%
summarise(count = n())
words_by_artists <- text_token %>%
group_by(artist, word) %>%
count_(word)
words_by_artists <- text_token %>%
group_by(artist, word)
View(words_by_artists)
group_by(artist, word) %>%
count_(word)
words_by_artists <- text_token %>% select(artist, word) %>%
group_by(artist, word) %>%
count_(word)
words_by_artists <- text_token %>% select(artist, word)
View(words_by_artists)
words_by_artists <- text_token %>% select(artist, word)%>%
group_by(artist, word)
View(words_by_artists)
words_by_artists <- text_token %>% dplyr::count(c(artist, word, sort = TRUE)
words_by_artists <- text_token %>% dplyr::count(c(artist, word, sort = TRUE)
words_by_artists <- text_token %>% dplyr::count(c(artist, word), sort = TRUE)
words_by_artists <- dplyr::count(text_token,c(artist, word), sort = TRUE)
dplyr::count(text_token,c(artist, word), sort = TRUE)
words_by_artists <- dplyr::count(text_token,c("artist", "word"), sort = TRUE)
words_by_artists <- count(text_token,c("artist", "word"), sort = TRUE)
words_by_artists <- count(text_token,c("artist", "word"))
View(words_by_artists)
words_by_artists <- text_token %>%
dplyr::count(artist, sort = TRUE)
View(words_by_artists)
ggplot(words_by_artists) + geom_bar(aes(x = artist, y = n))
ggplot(words_by_artists) + geom_bar(aes(x = "artist"))
ggplot(words_by_artists) + geom_bar(aes(x = artist))
ggplot(text_token) + geom_bar(aes(x = artist))
tidytext::get_sentiments("nrc")
text_token_cleared <- text_token_cleared %>%
inner_join(tidytext::get_sentiments("nrc"))
View(text_token_cleared)
text_token_cleared <- text_token_cleared %>%
inner_join(tidytext::get_sentiments("bing"))
ggplot(text_token_cleared) + geom_bar(aes(x = sentiment))
text_token <- text_token %>%
inner_join(tidytext::get_sentiments("bing"))
ggplot(text_token) + geom_bar(aes(x = sentiment))
ggplot(text_token) + geom_bar(aes(x = sentiment)) + facet_grid(artist)
ggplot(text_token) + geom_bar(aes(x = sentiment)) + facet_grid(artist ~ .)
text_token <- text_token %>%
inner_join(tidytext::get_sentiments("afinn"))
View(text_token)
